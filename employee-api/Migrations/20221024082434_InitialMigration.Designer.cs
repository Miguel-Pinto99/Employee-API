// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using employee_api.Data;

#nullable disable

namespace employee_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221024082434_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("employee_api.Models.Absent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("workPatternId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("workPatternId");

                    b.ToTable("Absent");
                });

            modelBuilder.Entity("employee_api.Models.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CheckedIn")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OfficeLocation")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("employee_api.Models.WorkPattern", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WorkPattern");
                });

            modelBuilder.Entity("employee_api.Models.WorkPatternPart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("WorkPatternId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WorkPatternId");

                    b.ToTable("WorkPatternPart");
                });

            modelBuilder.Entity("employee_api.Models.Absent", b =>
                {
                    b.HasOne("employee_api.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("employee_api.Models.WorkPattern", "workPattern")
                        .WithMany()
                        .HasForeignKey("workPatternId");

                    b.Navigation("User");

                    b.Navigation("workPattern");
                });

            modelBuilder.Entity("employee_api.Models.WorkPattern", b =>
                {
                    b.HasOne("employee_api.Models.ApplicationUser", "User")
                        .WithMany("WorkPatterns")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("employee_api.Models.WorkPatternPart", b =>
                {
                    b.HasOne("employee_api.Models.WorkPattern", null)
                        .WithMany("Parts")
                        .HasForeignKey("WorkPatternId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("employee_api.Models.ApplicationUser", b =>
                {
                    b.Navigation("WorkPatterns");
                });

            modelBuilder.Entity("employee_api.Models.WorkPattern", b =>
                {
                    b.Navigation("Parts");
                });
#pragma warning restore 612, 618
        }
    }
}
